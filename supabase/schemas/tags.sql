-- 1. Create the tags table
CREATE TABLE public.tags (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name text NOT NULL UNIQUE,
	created_at timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL
);
-- Add description/comment for the tags table
COMMENT ON TABLE public.tags IS 'Stores unique tag names.';
-- 2. Create the link_tags junction table
CREATE TABLE public.link_tags (
	link_id int NOT NULL REFERENCES public.links(id) ON DELETE CASCADE,
	tag_id bigint NOT NULL REFERENCES public.tags(id) ON DELETE CASCADE,
	created_at timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL,
	PRIMARY KEY (link_id, tag_id) -- Composite primary key ensures uniqueness
);
-- Add description/comment for the link_tags table
COMMENT ON TABLE public.link_tags IS 'Junction table linking links and tags for a many-to-many relationship.';
-- Add indexes for faster lookups
CREATE INDEX idx_link_tags_link_id ON public.link_tags(link_id);
CREATE INDEX idx_link_tags_tag_id ON public.link_tags(tag_id);
-- Optional: Add comment to clarify summary column does not store tags
COMMENT ON COLUMN public.links.summary IS 'Stores the generated summary text, excluding any frontmatter or tags.';